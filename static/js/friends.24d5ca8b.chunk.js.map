{"version":3,"sources":["libs/http.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/Modal/index.jsx","components/Modal/Modal.module.scss","components/FriendPreview/index.jsx","components/FriendPreview/FriendPreview.module.scss","pages/Friends/Friends.module.scss","components/Pagination/Pagination.module.scss","components/CreateFriend/index.jsx","components/Pagination/index.jsx","libs/general.js","pages/Friends/index.jsx"],"names":["BASE_URL","http","resource","fetch","then","response","json","httpPOST","data","method","headers","body","JSON","stringify","httpDELETE","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","Modal","bgColor","text","className","styles","style","background","module","exports","FriendPreview","props","name","photo","friend","src","alt","CreateFriend","useState","friendName","setFriendName","friendPhoto","setFriendPhoto","formPostObj","setFormPostObj","isModalVisibile","setModalVisibile","useEffect","createFriend","__friend","value","onChange","e","target","id","type","placeholder","required","onClick","event","preventDefault","setTimeout","Pagination","numOfElements","setActualButtonNum","totButtonNum","setTotButtonNum","friendsList","Math","ceil","length","paginationList","__prevAndNext","keys","map","index","Friends","actualFriendsList","setActualFriendsList","actualButtonNum","__friendsList","__pagination"],"mappings":"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","file":"static/js/friends.24d5ca8b.chunk.js","sourcesContent":["const BASE_URL = \"https://edgemony-backend.herokuapp.com\";\n\nconst http = (resource) =>\n  fetch(BASE_URL + resource).then((response) => response.json());\n\nconst httpPOST = (resource, data) =>\n  fetch(BASE_URL + resource, {\n    method: \"POST\",\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  }).then((response) => response.json());\n\nconst httpDELETE = (resource) =>\n  fetch(BASE_URL + resource, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n  }).then((response) => response.json());\n\n// Popola la lista degli amici, in base alla lista friendsNames\nconst fillFriendsList = (friendsNames) => {\n  let value = 0;\n  for (value in [...Array(friendsNames.length).keys()]) {\n    httpPOST(\"/friends\", {\n      name: friendsNames[value],\n      photo: `https://randomuser.me/api/portraits/men/${value}.jpg`,\n    });\n\n    setTimeout(() => {}, 100);\n  }\n};\n\nexport { http, httpPOST, httpDELETE, fillFriendsList };\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// import styles from \"./Modal.module.scss\";\n\n// const Modal = props => {\n//     let result = \"\";\n\n//     if (props.value === \"red\"){\n//         result = \"Post Deleted\";\n//     } if (props.value === \"cornflowerblue\"){\n//         result = \"Post Added\"\n//     }\n//     return (\n//         <div className={styles.modal} style={{background: props.value}}>\n//             <p>{result}</p>\n//         </div>\n//     )\n// }\n\n\n// export default Modal;\n\nimport styles from \"./Modal.module.scss\";\n\nconst Modal = ({ bgColor, text }) => {\n  return (\n    <div className={styles.Modal} style={{ background: `${bgColor}` }}>\n      <p>{text}</p>\n    </div>\n  );\n};\n\nexport default Modal;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__32mLz\"};","import styles from \"./FriendPreview.module.scss\";\n\nconst FriendPreview = (props) => {\n    const data = props.data || {\n        name: 'Friend', \n        photo:\"http://ranomuser.me/api/portraits/women/59.jpg\"   \n    };                      // <= DATI DI PLACEHOLDER\n    return (\n        <div className={styles.friend}>\n            <img src={data.photo} alt={data.name} />\n            <p>{data.name}</p>\n        </div>\n    );\n};\n\nexport { FriendPreview };","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"FriendPreview_friend__3Gjby\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Friends\":\"Friends_Friends__2IY9Z\",\"__friendsList\":\"Friends___friendsList__319r6\",\"__pagination\":\"Friends___pagination__Z3NJF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginationList\":\"Pagination_paginationList__ru3We\",\"__prevAndNext\":\"Pagination___prevAndNext__2W61M\"};","import { useState, useEffect } from \"react\";\nimport { httpPOST } from \"../../libs/http\";\nimport styles from \"./CreateFriend.module.scss\";\nimport Modal from \"./../Modal\";\n\nconst CreateFriend = () => {\n  const [friendName, setFriendName] = useState(\"\");\n  const [friendPhoto, setFriendPhoto] = useState(\"\");\n  const [formPostObj, setFormPostObj] = useState({});\n  const [isModalVisibile, setModalVisibile] = useState(false);\n\n  const handleSendBtn = (event) => {\n    event.preventDefault();\n    httpPOST(\"/friends\", formPostObj);\n    // alert(\"L'amico Ã¨ stato aggiunto\");\n\n    setModalVisibile(true);\n    setTimeout(() => {\n      setModalVisibile(false);\n    }, 3000);\n  };\n\n  useEffect(() => {\n    setFormPostObj({\n      name: friendName,\n      photo: friendPhoto,\n    });\n  }, [friendName, friendPhoto]);\n\n//   return (\n//     <div className={styles.createFriend}>\n//       <form>\n//         <div className={styles.__friend}>\n//           <input\n//             value={friendName}\n//             onChange={(e) => setFriendName(e.target.value)}\n//             name=\"friend\"\n//             id=\"friend\"\n//             type=\"text\"\n//             placeholder=\"Friend name\"\n//             required\n//           />\n\n//           <input\n//             onChange={(e) => setFriendPhoto(e.target.value)}\n//             value={friendPhoto}\n//             name=\"photo\"\n//             id=\"photo\"\n//             type=\"text\"\n//             placeholder=\"Photo URL\"\n//           />\n\n//           <button type=\"submit\" onClick={handleSendBtn}>\n//             ADD\n//           </button>\n//         </div>\n//       </form>\n//     </div>\n//   );\n// };\n\n\nreturn (\n  <div className={styles.createFriend}>\n    {isModalVisibile && (\n      <Modal bgColor=\"lightgreen\" text=\"Hai un nuovo amico alla lista!\" />\n    )}\n    <form>\n      <div className={styles.__friend}>\n        <input\n          value={friendName}\n          onChange={(e) => setFriendName(e.target.value)}\n          name=\"friend\"\n          id=\"friend\"\n          type=\"text\"\n          placeholder=\"Friend name\"\n          required\n        />\n\n        <input\n          onChange={(e) => setFriendPhoto(e.target.value)}\n          value={friendPhoto}\n          name=\"photo\"\n          id=\"photo\"\n          type=\"text\"\n          placeholder=\"Photo URL\"\n        />\n\n        <button type=\"submit\" onClick={handleSendBtn}>\n          ADD\n        </button>\n      </div>\n    </form>\n  </div>\n);\n};\n\nexport default CreateFriend;\n","import { useState, useEffect } from \"react\";\nimport { http } from \"./../../libs/http\";\nimport { arrayGenerator } from \"./../../libs/general\";\nimport styles from \"./Pagination.module.scss\";\n\nconst Pagination = ({ setActualButtonNum }) => {\n  const [totButtonNum, setTotButtonNum] = useState([]);\n\n  useEffect(() => {\n    http(`/friends`).then((friendsList) => {\n      setTotButtonNum(Math.ceil(friendsList.length / 10));\n    });\n  });\n\n  return (\n    <ul className={styles.paginationList}>\n      <button className={styles.__prevAndNext}>â Prev</button>\n      {arrayGenerator(totButtonNum).map((index) => (\n        <li key={index}>\n          <button onClick={() => setActualButtonNum(index + 1)}>\n            {index + 1}\n          </button>\n        </li>\n      ))}\n      <button className={styles.__prevAndNext}>Next â</button>\n    </ul>\n  );\n};\n\nexport default Pagination;","const arrayGenerator = (numOfElements) => {\n  return [...Array(numOfElements).keys()];\n};\n\nexport { arrayGenerator };\n","import { useState, useEffect } from \"react\";\nimport CreateFriend from \"../../components/CreateFriend\";\nimport { FriendPreview } from \"../../components/FriendPreview\";\n// import Pagination from \"./../../components/Pagination\";\nimport { http } from \"../../libs/http\";\nimport styles from \"./Friends.module.scss\";\n\nimport Pagination from \"../../components/Pagination\";\n\nconst Friends = () => {\n  const [actualFriendsList, setActualFriendsList] = useState([]);\n  const [actualButtonNum, setActualButtonNum] = useState(1);\n\n  useEffect(() => {\n    http(`/friends?_page=${actualButtonNum}`).then((friendsList) =>\n      setActualFriendsList(friendsList)\n    );\n  }, [actualButtonNum]);\n\n  return (\n    <div className={styles.Friends}>\n      <CreateFriend />\n\n      <div className={styles.__friendsList}>\n        {actualFriendsList.map((friend) => (\n          <FriendPreview data={friend} key={friend.id} />\n        ))}\n      </div>\n\n      <div className={styles.__pagination}>\n        <Pagination setActualButtonNum={setActualButtonNum} />\n      </div>\n    </div>\n  );\n};\n\nexport default Friends;\n"],"sourceRoot":""}