{"version":3,"sources":["pages/Home/Home.module.scss","components/Header/Header.module.scss","components/CreatePost/CreatePost.module.scss","components/Post/Post.module.scss","components/Footer/Footer.module.scss","components/Modal/Modal.module.scss","components/FriendPreview/FriendPreview.module.scss","pages/Friends/Friends.module.scss","components/MessagePreview/MessagePreview.module.scss","components/Header/index.jsx","components/Footer/index.jsx","libs/http.js","components/Modal/index.jsx","components/CreatePost/index.jsx","pages/NewPost/index.jsx","pages/Messages/index.jsx","components/FriendPreview/index.jsx","pages/Friends/index.jsx","components/DataSet/dataSet.js","components/MessagePreview/index.jsx","components/Post/index.jsx","pages/Home/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Header","props","name","links","link","label","className","styles","header","map","item","index","isActive","active","to","Footer","year","Date","getFullYear","footer","BASE_URL","http","resource","fetch","then","response","json","Modal","result","value","modal","style","background","CreatePost","useState","authorInput","setAuthorInput","imgInput","setImgInput","messageInput","setMessageInput","formPostObj","setFormPostObj","isModalShown","setModalShown","useEffect","author","text","date","toISOString","photo","createPost","__author","onChange","e","target","id","type","placeholder","required","onClick","event","data","preventDefault","method","headers","body","JSON","stringify","cols","rows","NewPost","Messages","FriendPreview","friend","src","alt","Friends","friendsList","setFriendsList","DataSet","formatRelative","relative","addSuffix","locale","it","MessagePreview","sender","message","Post","post","window","location","href","deleteBtn","friends","messages","posts","Home","friendsPreview","setFriendsPreview","allPosts","setAllPosts","messagesPreview","setMessagesPreview","reverse","home","grid","createPostBtn","INIT_STATE","nav","reducer","state","action","App","useReducer","dispatch","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ceaacb3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Home_home__1JXvv\",\"grid\":\"Home_grid__sUtIT\",\"createPostBtn\":\"Home_createPostBtn__1BGTQ\",\"friend\":\"Home_friend__eOEhP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1v0yI\",\"active\":\"Header_active__3GX0s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"createPost\":\"CreatePost_createPost__3XCbM\",\"__author\":\"CreatePost___author__2lcbm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__3hqZB\",\"deleteBtn\":\"Post_deleteBtn__1bIB2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__7dIj9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__1vwov\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"FriendPreview_friend__3Gjby\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Friends\":\"Friends_Friends__2IY9Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"MessagePreview_message__3j9dl\"};","// import {Link, useMatch, useResolvedPath} from \"react-router-dom\"\nimport {NavLink} from \"react-router-dom\" \nimport styles from  './Header.module.scss'\n\nconst Header = (props) => {\n   const  name = props.name || 'App';\n   const  links = props.links || [{link:\"\", label:\"Links\"}];\n//    const CheckActive=(link) =>{\n//        const resolved= useResolvedPath(link);\n//        const match =useMatch({path:resolved.pathname, end:true})\n//        return match ? styles.active:\"\";\n//    }\n    return(\n        <header  className={styles.header}>\n            <h1>{name}</h1>\n            <nav>\n                <ul>\n                {links.map((item, index) => ( \n                    <li key={index}>\n                    <NavLink className = {({isActive})=> isActive ? styles.active :\"\"} to={item.link}>{item.label}</NavLink>\n                        {/* <Link className={CheckActive(item.link)} to={item.link}>{item.label}</Link> */}\n                    </li>\n                ))}\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default  Header;\n","import styles from  './Footer.module.scss'\n\nconst Footer = () => {\n    const  year= new Date().getFullYear();\n     return(\n         <footer className={styles.footer}>\n             <hr/>\n             <p>Copyright Edgemony {year}</p>\n         </footer>\n     )\n }\n \n export default Footer;","const BASE_URL = \"https://edgemony-backend.herokuapp.com\";\n\nconst http = (resource) =>\n  fetch(BASE_URL + resource).then((response) => response.json());\n\nconst httpPOST = (resource, data) =>\n  fetch(BASE_URL + resource, {\n    method: \"POST\",\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  }).then((response) => response.json());\n\n  const httpDELETE = (resource) =>\n  fetch(BASE_URL + resource, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n  }).then((response) => response.json());\n\n\nexport { http, httpPOST, httpDELETE };\n","import styles from \"./Modal.module.scss\";\n\nconst Modal = props => {\n    let result = \"\";\n\n    if (props.value === \"red\"){\n        result = \"Post Deleted\";\n    } if (props.value === \"cornflowerblue\"){\n        result = \"Post Added\"\n    }\n    return (\n        <div className={styles.modal} style={{background: props.value}}>\n            <p>{result}</p>\n        </div>\n    )\n}\n\n\nexport default Modal;","import { useState, useEffect } from \"react\";\nimport { httpPOST } from \"../../libs/http\";\nimport styles from \"./CreatePost.module.scss\";\nimport Modal from '../Modal'\n\n\nconst CreatePost = () => {\n  const [authorInput, setAuthorInput] = useState(\"\");\n  const [imgInput, setImgInput] = useState(\"\");\n  const [messageInput, setMessageInput] = useState(\"\");\n  const [formPostObj, setFormPostObj] = useState({});\n\n\n  const [isModalShown, setModalShown] = useState(false);\n  const handleSendBtn = (event) => {\n    event.preventDefault();\n    httpPOST(\"/posts\", formPostObj);\n    // alert(\"Il post `e stato creato!\");\n    setModalShown(!isModalShown);\n  };\n\n  useEffect(() => {\n    setFormPostObj({\n      author: authorInput,\n      text: messageInput,\n      date: new Date().toISOString(),\n      photo: imgInput,\n    });\n  }, [authorInput, imgInput, messageInput]);\n\n  return (\n    <div className={styles.createPost}>\n      <form>\n        <div className={styles.__author}>\n          <input\n            value={authorInput}\n            onChange={(e) => setAuthorInput(e.target.value)}\n            name=\"author\"\n            id=\"author\"\n            type=\"text\"\n            placeholder=\"Author\"\n            required\n          />\n\n          <input\n            onChange={(e) => setImgInput(e.target.value)}\n            value={imgInput}\n            name=\"img\"\n            id=\"img\"\n            type=\"text\"\n            placeholder=\"Img URL\"\n          />\n\n          <button type=\"submit\" onClick={handleSendBtn}>\n            SEND\n          </button>\n          {isModalShown && <Modal value=\"cornflowerblue\"/>}\n        </div>\n\n        <textarea\n          value={messageInput}\n          onChange={(e) => setMessageInput(e.target.value)}\n          name=\"message\"\n          id=\"message\"\n          cols=\"30\"\n          rows=\"10\"\n          placeholder=\"Message\"\n          required\n        ></textarea>\n      </form>\n    </div>\n  );\n};\n\nexport default CreatePost;","import CreatePost from \"../../components/CreatePost\";\n\nconst NewPost = () => {\n  return <CreatePost />;\n};\n\nexport default NewPost;\n","// import { useState, useEffect } from \"react\";\n// import styles from \"./Messages.module.scss\";\n\nconst Messages = () => {\n    return <h1>Messagesssss</h1>;\n  };\n  \n  export default Messages;","import styles from \"./FriendPreview.module.scss\";\n\nconst FriendPreview = (props) => {\n    const data = props.data || {\n        name: 'Friend', \n        photo:\"http://ranomuser.me/api/portraits/women/59.jpg\"   \n    };                      // <= DATI DI PLACEHOLDER\n    return (\n        <div className={styles.friend}>\n            <img src={data.photo} alt={data.name} />\n            <p>{data.name}</p>\n        </div>\n    );\n};\n\nexport { FriendPreview };","import { useState, useEffect } from \"react\";\nimport { FriendPreview } from \"../../components/FriendPreview\";\nimport { http } from \"../../libs/http\";\nimport styles from \"./Friends.module.scss\";\n\nconst Friends = () => {\n  const [friendsList, setFriendsList] = useState([]);\n\n  useEffect(() => {\n    http(\"/friends\").then((friendsList) => setFriendsList(friendsList));\n  }, []);\n\n  return (\n    <div className={styles.Friends}>\n      {friendsList.map((friend) => (\n        <FriendPreview data={friend} key={friend.id} />\n      ))}\n    </div>\n  );\n};\n\nexport default Friends;","import { formatRelative } from 'date-fns';\nimport {it} from 'date-fns/locale'\n\nconst DataSet = (props) => {\n   \n        return (\n            <>\n                {formatRelative(new Date(props.relative), \n                new Date(), { addSuffix: true, locale: it })}\n            </>\n        );\n    };\n\nexport {DataSet}","import styles from \"./MessagePreview.module.scss\";\nimport {DataSet} from '../DataSet/dataSet.js'\n\nconst MessagePreview = (props) => {\n    const data = props.data || {\n        text: 'lorem ipsum', date: new Date(), sender: 'user',\n    };\n\n\n    return (\n        <div className={styles.message}>\n            <h5>{data.sender}</h5>\n            <p>\n            <small> <DataSet relative={data.date}/> </small>\n\n            </p>\n            <p>{data.text}</p>\n        </div>\n    );\n};\n\nexport { MessagePreview };","\nimport styles from './Post.module.scss';\nimport {DataSet} from '../DataSet/dataSet.js'\nimport {httpDELETE} from \"../../libs/http\"\nimport Modal from '../Modal'\nimport {useState} from \"react\";\n\nconst Post = (props) => {\n    const data = props.data || {\n        author: 'user',\n        text: 'text',\n        date: new Date(),\n        photo: 'https://images.unsplash.com/photo-1511149672083-577ee63de3dc?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1024&q=80'\n    };\n    const [isModalShown, setModalShown] = useState(false);\n\n    const handleDeletePost = () => {\n        httpDELETE(`/posts/${props.data.id}`).then(() => {});\n        // alert(`Post by ${props.data.author} was deleted`);\n        setModalShown(!isModalShown);\n        window.location.href = \"/\";\n      };\n\n    return (\n        <article className={styles.post}>\n            <button onClick={handleDeletePost} className={styles.deleteBtn}>X</button>\n            {isModalShown && <Modal value=\"red\"/>}\n            <h3>{data.author}</h3>\n            <p>\n                {/* <small><DataSet relative={data.date}/></small> */}\n                <small>{data.date ? <DataSet relative={data.date}/> : <></>}</small>\n            </p>\n        \n            <p>{data.text}</p>\n\n            {data.photo ? <img src={data.photo} alt={data.author} /> : <></>}\n        </article>\n    );\n};\n\nexport { Post };","import { useState, useEffect } from \"react\";\nimport { FriendPreview } from \"../../components/FriendPreview\";\nimport { MessagePreview } from \"../../components/MessagePreview\";\nimport { Post } from \"../../components/Post\";\nimport { http } from \"./../../libs/http\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"./Home.module.scss\";\n\nconst friends = [];\n\nconst messages = [];\n\nconst posts = [];\n\nconst Home = () => {\n  const [friendsPreview, setFriendsPreview] = useState(friends);\n  const [allPosts, setAllPosts] = useState(posts);\n  const [messagesPreview, setMessagesPreview] = useState(messages);\n\n  // GETTER -> const friendPreview = [];\n  // SETTER -> friendPreview = [...]\n\n  // Esegui del codice quando il componente è inizializzato (montato in pagina)\n  // componentDidMount() --> simile a \"DOMContentLoaded\" ma solo per il componente\n  useEffect(() => {\n    // fetch(\"https://edgemony-backend.herokuapp.com/friends?_limit=4\")\n    //   .then((response) => response.json())\n    //   .then((data) => setFriendsPreview(data));\n\n    http(\"/friends?_limit=4\").then((data) => setFriendsPreview(data));\n    http(\"/messages?_limit=4\").then((data) => setMessagesPreview(data));\n    http(\"/posts\").then((data) => setAllPosts(data.reverse()));\n\n    // Promise.all([\n    //   http(\"/friends?_limit=4\"),\n    //   http(\"/messages?_limit=4\"),\n    //   http(\"/posts\")\n    // ]).then((data) => console.log(data[0]))\n  }, []);\n\n  return (\n    <section className={styles.home}>\n      <h3>Bevenuto utente</h3>\n      <div className={styles.grid}>\n        <aside>\n          {friendsPreview.map((friend, index) => (\n            <FriendPreview key={index} data={friend} />\n          ))}\n        </aside>\n        <main>\n          <Link to=\"/new-post\">\n            <button className={styles.createPostBtn}>\n              + Create a new post!\n            </button>\n          </Link>\n          {allPosts.map((post, index) => (\n            <Post key={index} data={post} />\n          ))}\n        </main>\n        <aside>\n          {messagesPreview.map((message, index) => (\n            <MessagePreview key={index} data={message} />\n          ))}\n        </aside>\n      </div>\n    </section>\n  );\n};\n\nexport default Home;\n","import { useReducer } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\n\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport NewPost from \"./pages/NewPost\";\nimport Messages from \"./pages/Messages\";\nimport Friends from \"./pages/Friends\";\n\nimport Home from \"./pages/Home\";\n\nconst INIT_STATE = {\n  name: \"Feisbrut\",\n  nav: [\n    { link: \"/\", label: \"Home\" },\n    { link: \"/messages\", label: \"Messages\" },\n    { link: \"/friends\", label: \"Friends\" },\n  ],\n  friendsPreview: [],\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"change-name\":\n      return { ...state, name: \"Feisbell\" };\n    default:\n      return state;\n  }\n};\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, INIT_STATE);\n\n  return (\n    <div>\n      <Header name={state.name} links={state.nav} />\n\n      <button onClick={() => dispatch({ type: \"change-name\" })}>\n        Cambia nome\n      </button>\n\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/new-post\" element={<NewPost />} />\n        <Route path=\"/messages\" element={<Messages />} />\n        <Route path=\"/friends\" element={<Friends />} />\n      </Routes>\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}